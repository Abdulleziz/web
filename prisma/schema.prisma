// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model ForumTag {
    id        String        @id @default(cuid())
    createdAt DateTime      @default(now())
    updatedAt DateTime      @updatedAt
    name      String        @unique
    threads   ForumThread[]
}

model ForumThread {
    id        String   @id @default(cuid())
    title     String   @db.TinyText
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    locked    Boolean  @default(false)

    posts ForumPost[]
    tags  ForumTag[]

    creator   User   @relation(fields: [creatorId], references: [id], onDelete: Cascade)
    creatorId String

    @@index([creatorId])
}

model ForumPost {
    id        String   @id @default(cuid())
    message   String   @db.Text
    createdAt DateTime @default(now())

    thread   ForumThread @relation(fields: [threadId], references: [id], onDelete: Cascade)
    threadId String

    creator   User   @relation(fields: [creatorId], references: [id], onDelete: Cascade)
    creatorId String

    @@index([threadId])
    @@index([creatorId])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String        @id @default(cuid())
    name          String?
    email         String?       @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    forumThreads  ForumThread[]
    ForumPost     ForumPost[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
